# The environment variables such as 
# ${FACE_THRESHOLD} and ${API_KEY} should
# reside in a .env file along side docker-compose.yaml
  
version: '2.3'
services:
  gabriel-server:
    image: cmusatyalab/openscout:${OPENSCOUT_TAG}
    container_name: gabriel-server
    ports:
      - "9099:9099"
      - "5555:5555"
    entrypoint: ["./main.py"]
    restart: unless-stopped
    networks:
      - openscout-net

  face-engine:
    image: cmusatyalab/openscout:${OPENSCOUT_TAG}
    container_name: openscout-face-engine
    restart: unless-stopped
    privileged: true
    entrypoint: ["./face.py", "--endpoint", "http://openface-service:5000", "--threshold", "${FACE_THRESHOLD}"]
    #to use MS Face Cognitive Service, make this the entrypoint instead and use the ms-face-server container...
    #entrypoint: ["./face.py", "--msface", "--endpoint", "http://ms-face-service:5000","--apikey", "${API_KEY}", "--threshold", "${FACE_THRESHOLD}"]
    volumes:
      - ./openscout-vol:/openscout/server/images/
      - training-vol:/openscout/server/training/
    depends_on:
      - gabriel-server
      - openface-service
      #- ms-face-service
    networks:
      - openscout-net

  object-engine:
    image: cmusatyalab/openscout:${OPENSCOUT_TAG}
    container_name: openscout-object-engine
    restart: unless-stopped
    privileged: true
    entrypoint: ["./obj.py", "--model", "${DNN}", "--threshold", "${OBJ_THRESHOLD}", "--exclude", "${EXCLUSIONS}"]
    # for NVIDIA GPUs
    # gpus: all     # not yet supported by docker-compose
    runtime: nvidia
    volumes:
      - ./openscout-vol:/openscout/server/images/
    depends_on:
      - gabriel-server
    networks:
      - openscout-net
    #environment:
    #  - TF_FORCE_GPU_ALLOW_GROWTH=true #the following environment variable may be necessary if your GPU only has a modest (~2GB) amount of RAM
    #  - CUDA_VISIBLE_DEVICES=-1 #set this if you want to force CPU only

# OpenFace is the default for face recognition
  openface-service:
    image: cmusatyalab/openface
    container_name: openface-service
    ports:
      - "5000:5000"
    restart: unless-stopped
    privileged: true
    entrypoint: ["python", "/root/openface-rest.py", "/openscout/server/training/"]
    volumes:
      - training-vol:/openscout/server/training/
    networks:
      - openscout-net

# or the MS Face Cognitive Server can be used (Azure Account Required)
  # ms-face-service:
  #   image: containerpreview.azurecr.io/microsoft/cognitive-services-face
  #   container_name: ms-face-service
  #   restart: unless-stopped
  #   ports:
  #     - "5000:5000"
  #   networks:
  #     - openscout-net
  #   cpus: '1.0'
  #   mem_reservation: 4gb
  #   environment:
  #     - Eula=accept
  #     - Billing=${BILLING_ENDPOINT}
  #     - ApiKey=${API_KEY}

networks:
  openscout-net:
volumes:
  training-vol:

